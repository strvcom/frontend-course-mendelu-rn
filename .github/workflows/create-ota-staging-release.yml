# This workflow should be triggered manually to publish mobile over-the-air update to targeted release channel from a particular branch.
# The goal is to collocate production environment variables `.env` and prevent switching of variables on a local machine

name: '📱 Create OTA Staging Release'

on:
  workflow_dispatch:
    inputs:
      channel:
        required: true
        description: 'What Staging channel do you want to target (defined in eas.json, read Readme)'
      internalNote:
        required: true
        description: 'What are you releasing'
      mentalCheck:
        required: true
        description: '👻 Are you sure that current runtime version and channel have a compatible native layer? 👻'
        type: choice
        options:
          - YES

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_ACCESS_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_ACCESS_TOKEN }}" ]; then
            echo "You must provide an EXPO_ACCESS_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: 🏗 Setup repo
        uses: actions/checkout@v3

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn

      - name: 🏗 Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_ACCESS_TOKEN }}

      - name: Find yarn cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: 🚀 Publish app
        run: eas update --branch ${{ github.event.inputs.channel }} --message "${{ github.event.inputs.internalNote }}"
        env:
          APP_ENV: 'staging'
          API_URL: ${{ secrets.API_URL }}
